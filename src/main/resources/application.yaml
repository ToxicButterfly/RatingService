server:
  port: 8083
spring:
  application:
    name: rating-service
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:8080/realms/cab-aggregator-realm/protocol/openid-connect/certs
  datasource:
    driver-class-name: org.postgresql.Driver
    password: 12345
    username: postgres
    url: jdbc:postgresql://localhost:5432/ratingdb
  jpa:
    database: postgresql
    show-sql: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
  kafka:
    consumer:
      properties:
        spring.json:
          trusted.packages: "*"
          type.mapping: ratingDelegation:com.example.ratingservice.dto.DelegationFromRidesRequest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      bootstrap-servers: kafka:29092
      group-id: ratingGroup
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bootstrap-servers: kafka:29092
    bootstrap-servers: kafka:29092
topic:
  name:
    ride: rating-delegate
kafka:
  partitions:
    count: 5
  replicas:
    count: 1
feign:
  client:
    passenger:
      name: passenger-service
      url: http://api-gateway:8765/PASSENGER-SERVICE
      path: /api/v1/passengers
    driver:
      name: driver-service
      url: http://api-gateway:8765/DRIVER-SERVICE
      path: /api/v1/drivers
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
management:
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
jwt:
  auth:
    converter:
      resource-id: cab-aggregator-client
      principal-attribute: preferred_username
logging:
  level:
    org.springframework.security: DEBUG
